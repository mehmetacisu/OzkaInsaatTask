// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OzkaInsaatTask.Repository;

#nullable disable

namespace OzkaInsaatTask.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230404132007_createDatabase")]
    partial class createDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OzkaInsaatTask.Core.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("City", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityName = "İstanbul",
                            CountryName = "Türkiye"
                        },
                        new
                        {
                            Id = 2,
                            CityName = "Ankara",
                            CountryName = "Türkiye"
                        },
                        new
                        {
                            Id = 3,
                            CityName = "İzmir",
                            CountryName = "Türkiye"
                        },
                        new
                        {
                            Id = 4,
                            CityName = "Bursa",
                            CountryName = "Türkiye"
                        },
                        new
                        {
                            Id = 5,
                            CityName = "Düzce",
                            CountryName = "Türkiye"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
